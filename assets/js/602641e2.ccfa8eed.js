"use strict";(self.webpackChunksol_panel_docs=self.webpackChunksol_panel_docs||[]).push([[460],{4852:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(9231);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3173:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7762);function i(e){let{component:t}=e;const{siteConfig:n}=(0,r.Z)(),{customFields:i}=n;if(void 0===i.requiredVersion)throw new Error("Required version is not defined in siteConfig.customFields");return i.requiredVersion[t]}},1313:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(644),i=(n(9231),n(4852)),a=n(3173);const o={title:"Setup",sidebar_position:2},l=void 0,s={unversionedId:"development/setup",id:"development/setup",title:"Setup",description:"Contributing to SOL Panel is easiest done via Github Codespaces.",source:"@site/docs/development/setup.mdx",sourceDirName:"development",slug:"/development/setup",permalink:"/docs/development/setup",draft:!1,editUrl:"https://github.com/trustless-engineering/sol-panel/tree/next/docs/docs/development/setup.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Setup",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Dedicated RPC",permalink:"/docs/features/dedicated-rpc"},next:{title:"Contributing",permalink:"/docs/development/contributing"}},p={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Recommended Setups",id:"recommended-setups",level:2},{value:"Github Codespaces",id:"github-codespaces",level:3},{value:"Tilt",id:"tilt",level:3},{value:"First Time Initialization",id:"first-time-initialization",level:2},{value:"Seed Databases",id:"seed-databases",level:4},{value:"Create Cluster",id:"create-cluster",level:4},{value:"Start Application",id:"start-application",level:4}],u={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Contributing to SOL Panel is easiest done via Github Codespaces.\nSimply create a new Codespace from this branch and all the dependencies will be pre-configured for you.\nYou can then connect directly to the Codespace from VS Code."),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kubernetes ",(0,i.kt)(a.Z,{component:"kubernetes",mdxType:"RequiredVersion"}),"+ Cluster"),(0,i.kt)("li",{parentName:"ul"})),(0,i.kt)("h2",{id:"recommended-setups"},"Recommended Setups"),(0,i.kt)("p",null,"There are various tooling configurations that work with developing on SOL Panel.\nSome are better than others, and some can lead to hours of headaches."),(0,i.kt)("h3",{id:"github-codespaces"},"Github Codespaces"),(0,i.kt)("p",null,"Github Codespaces allow anyone with a browser to contribute to SOL Panel! You can be building pipelines in just a few minutes by clicking the button below."),(0,i.kt)("admonition",{title:"Launch SOL Panel Codespace",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"NOTE:"))," A codespace with ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"4 CPU/8GB RAM"))," minimum is highly suggested. The number of dependencies within the Helm chart make 4GB of RAM simply too little."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://codespaces.new/trustless-engineering/sol-panel?quickstart=1"},(0,i.kt)("img",{parentName:"a",src:"https://github.com/codespaces/badge.svg",alt:"Start SOL Panel Development"})))),(0,i.kt)("h3",{id:"tilt"},"Tilt"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://tilt.dev"},"Tilt")," is a project that enables local development of a Kubernetes cluster. It does this by running a Kind cluster inside of Docker."),(0,i.kt)("p",null,"Installing Tilt can be done by following the instructions for your operating system ",(0,i.kt)("a",{parentName:"p",href:"https://docs.tilt.dev/install.html"},"here"),"."),(0,i.kt)("h2",{id:"first-time-initialization"},"First Time Initialization"),(0,i.kt)("p",null,"After you first clone the repo, you will need to run a few commands to get started."),(0,i.kt)("h4",{id:"seed-databases"},"Seed Databases"),(0,i.kt)("p",null,"Seeding the database provides you with some sane defaults to start with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm prisma db seed\n")),(0,i.kt)("h4",{id:"create-cluster"},"Create Cluster"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ctlptl apply -f docs/development/cluster.yml\n")),(0,i.kt)("h4",{id:"start-application"},"Start Application"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"tilt up\n")),(0,i.kt)("p",null,"After a few moments, the application will be available at ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:3000"),"."),(0,i.kt)("h1",{id:"making-changes"},"Making Changes"),(0,i.kt)("p",null,"Any changes made in your local environment will automatically be copied into the running container, no rebuilding required!"))}m.isMDXComponent=!0}}]);