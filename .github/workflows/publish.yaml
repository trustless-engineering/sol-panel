name: Publish Images

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CHARTS_RELEASE_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          install_only: true

      - name: Build chart
        run: helm package -u deploy/chart -d .charts --version ${{ github.ref_name }} --app-version ${{ github.ref_name }}

      - name: Push chart
        run: |
          cr upload -o trustless-engineering -r helm-charts -p .charts --token ${{ secrets.CHARTS_RELEASE_TOKEN }}

      - name: Create Index
        run: |
          git remote add charts https://github.com/trustless-engineering/helm-charts.git && git fetch charts
          cr index -o trustless-engineering -r helm-charts -p .charts --index-path index.yaml --remote charts --push --token ${{ secrets.CHARTS_RELEASE_TOKEN }}

  build-and-push-image:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 6
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup image tag
        id: imagetag
        run: |
          if [[ "${{ github.ref_name }}" == *-* ]]; then
            echo "::set-output name=tag::${{ github.ref_name }}";
          else
            echo "::set-output name=tag::latest";
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.imagetag.outputs.tag }}
